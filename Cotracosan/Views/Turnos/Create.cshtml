@model Cotracosan.Models.Cotracosan.Turnos

@{
    Layout = null;
}

<h2>Nuevo Turno</h2>


@using (Html.BeginForm("Create", "Turnos", FormMethod.Post, new { onsubmit = "return SubmitForm(this)", @class = "form-inline" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CodigoDeTurno, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.CodigoDeTurno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodigoDeTurno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoraDeSalida, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.HoraDeSalida, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoraDeSalida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoraDeLlegada, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.HoraDeLlegada, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoraDeLlegada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 offset-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
